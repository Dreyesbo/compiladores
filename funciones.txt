class FUNCIONES{
	void main(){
		int factorial, a, b, recur, recuriter;
		int fibx, fiby, fibz, topefib, i, fibrecu, fibiter;
		float x[15];
		fibx = 0;
		fiby= 1;
		fibz = 1;
		topefib = 15;
		factorial = 1;
		b = 7;
		for(a = 1; a <= b; a++){
			factorial = factorial * a;
		}
		[recur=FACTREC(b);]
		[recuriter=FACTRECITER(b);]

		for(i = 0; i < topefib-1; i++){
			fibx = fiby;
			fiby = fibz;
			fibz = fibx+fiby;
		}
		[fibrecu=FIBOREC(topefib, 0,1 );]
		[fibiter=FIBOITER(topefib);]

		for (i = 0; i < a; i++){
			x[i] = i*i;
			print("Arreglo posicion");
			print(i);
			printarr(x[i]);		
		}

		for (i = 0; i < a; i++){
			if(x[i]==4){
				print("Dato pencontrado en pos");
				print(i);
			}
				
		}

		print("Factorial en main");
		print(factorial); 
		print("Recursiva fact");
		print(recur);
		print("Iterativa en metodo");
		print(recuriter);
		print("FIBO en main");
		print(fibz);
		print("FIBORECURSIVO");
		print(fibrecu);
		print("FIBOITER");
		print(fibiter);
	}

	int FACTREC(int tope) {
		int b;
		if (tope == 1){
			return 1;
		}
		else{
			[b=FACTREC(tope-1);]
			return (tope*b);
		} 
	}

	int FACTRECITER (int tope){
		int a, b;
		b = 1;
		for(a=1; a <= tope; a++){
			b = b*a;
		}
		return b;
	}

	int FIBOREC(int tope, int prev, int curr) {
		int b;
		b=1;
		if (tope < 2){
			return curr;
		}
		else{
			[b=FIBOREC(tope-1, curr, curr+prev);]
			return b;
		}	
	} 

	int FIBOITER(int tope) {
		int i, fibx, fiby, fibz;
		fibx = 0;
		fiby= 1;
		fibz = 1;
		for(i = 0; i < tope-1; i++){
			fibx = fiby;
			fiby = fibz;
			fibz = fibx+fiby;
		}
		return fibz;
	}	
	
}
